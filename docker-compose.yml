services:
  camera-publisher:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.camera
    privileged: true
    network_mode: host
    tty: true
    stdin_open: true
    volumes:
      - /dev:/dev
      - /dev/dri:/dev/dri
      - /run/udev:/run/udev:ro
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/libcamera:/usr/share/libcamera:ro
      - /etc/libcamera:/etc/libcamera:ro
      - /usr/lib/aarch64-linux-gnu/libcamera:/usr/lib/aarch64-linux-gnu/libcamera:ro
      - /usr/lib/python3/dist-packages:/usr/lib/python3/dist-packages:ro   # <-- add this
      - .:/workspace
    environment:
      PYTHONPATH: "/usr/lib/python3/dist-packages"                          # <-- add this
      ROS_DOMAIN_ID: "0"
      ROS_LOCALHOST_ONLY: "1"
    command: [ "bash", "-lc",
      "source /opt/ros/humble/setup.bash && python3 /workspace/scripts/camera_publisher.py"
    ]

  recycling-robot:
    platform: linux/arm64
    build: .
    volumes:
      - .:/workspace
      - /dev:/dev
      - /dev/dri:/dev/dri
      - /run/udev:/run/udev:ro
      - /etc/localtime:/etc/localtime:ro
      - /usr/share/libcamera:/usr/share/libcamera:ro
      - /etc/libcamera:/etc/libcamera:ro
      - /usr/lib/aarch64-linux-gnu/libcamera:/usr/lib/aarch64-linux-gnu/libcamera:ro
    privileged: true
    group_add:
      - video
    network_mode: host
    tty: true
    stdin_open: true
    environment:
      ROS_DOMAIN_ID: "0"
      ROS_LOCALHOST_ONLY: "1"
    # Start your app automatically (no extra terminal)
    command:
    - bash
    - -lc
    - |
      source /opt/ros/humble/setup.bash
      colcon build --packages-select recycling_robot --symlink-install
      source install/setup.bash
      ros2 launch recycling_robot minimal.launch.py
    depends_on:
      - camera-publisher
