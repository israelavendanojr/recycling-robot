services:
  backend:
    build: ./backend
    command: ["python", "app.py"]
    volumes:
      - ./backend:/app
      - shared_data:/data  # Shared volume for database
      - shared_frames:/shared  # Shared volume for camera frames
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - API_BASE_URL=http://backend:8000   # Internal URL for services
    networks:
      - robot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ros2:
    build: ./ros2
    volumes:
      - ./ros2/src:/workspace/ros2_ws/src
      - shared_data:/data
      - shared_frames:/shared  # Shared volume for camera frames
      - /dev:/dev
      - /sys/class/gpio:/sys/class/gpio
      - /sys/devices:/sys/devices
    ports:
      - "8001:8001"  # Expose capture server port
    privileged: true
    networks:
      - robot_network
    group_add:
      - video
      - gpio
      - dialout
    devices:
      - "/dev/video0:/dev/video0"
      - "/dev/video1:/dev/video1"
      - "/dev/gpiochip0:/dev/gpiochip0"
      - "/dev/gpiochip4:/dev/gpiochip4"  # Pi 5 compatibility
      - "/dev/gpiomem:/dev/gpiomem"
    environment:
      - BACKEND_URL=http://backend:8000  # MUST point to service name
      - GPIOMEM=1
    depends_on:
      backend:
        condition: service_healthy
    command: ["tail", "-f", "/dev/null"]

  web:
    build: ./web
    volumes:
      - ./web:/app
    ports:
      - "5173:5173"
    environment:
      # Point frontend to backend via localhost for browser access
      - VITE_API_BASE=http://localhost:8000
      - VITE_VIDEO_URL=http://localhost:8000/video_feed
    networks:
      - robot_network
    depends_on:
      backend:
        condition: service_healthy

# Define custom network and shared volumes
networks:
  robot_network:
    driver: bridge

volumes:
  shared_data:
  shared_frames: